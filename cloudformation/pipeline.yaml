AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for deployment of serverless resources..
Parameters:
  ApplicationName:
    Type: String
    Description: Name of application used to describe resources.
    Default: sudoku
    AllowedPattern: "^[-a-z0-9]*$"
    ConstraintDescription: Application name can include numbers, lowercase letters, and hyphens (-).
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: Alex-Burgess
  GitHubRepo:
    Type: String
    Description: GitHub Repository Name
    Default: SudokuServerless
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: "master"
  GitHubToken:
    Type: String
    NoEcho: true
    Description: Personal Access Token.


Resources:
  BuildArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ApplicationName}-pipeline-artifacts'
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Build logs expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 180
            Prefix: !Sub '${ApplicationName}-pipeline-artifacts*'
            Status: Enabled

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ApplicationName}-PipelineServiceRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: PipelineServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:SetStackPolicy
                  - iam:PassRole
                  - sns:Publish
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${ApplicationName}-Pipeline'
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref BuildArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
              - Name: SourceZip
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref SamBuildsCodeBuildProject
              InputArtifacts:
                - Name: SourceZip
              OutputArtifacts:
                - Name: BuiltZip

  SamBuildsCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: BuildLogsGroup
    Properties:
      Name: !Sub ${ApplicationName}-Serverless-Builds
      Description: Builds SAM Serverless Applications
      ServiceRole: !GetAtt SamBuildsRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        # EnvironmentVariables:
        #   - Name: BUILD_NUMBER
        #     Type: PLAINTEXT
        #     Value: !Ref GitReleaseNumber
        #   - Name: BUILD_BUCKET
        #     Type: PLAINTEXT
        #     Value: !Ref PipelineArtifactBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub ${ApplicationName}-buildlogs
          StreamName: SudokuSamBuilds
      TimeoutInMinutes: 10

  BuildLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${ApplicationName}-buildlogs
      RetentionInDays: 30

  SamBuildsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ApplicationName}-SamBuildsRole'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: BuildServiceRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ApplicationName}-buildlogs"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ApplicationName}-buildlogs:*"
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            Resource:
              - !Sub "arn:aws:s3:::${BuildArtifactsBucket}/*"
          Version: '2012-10-17'
